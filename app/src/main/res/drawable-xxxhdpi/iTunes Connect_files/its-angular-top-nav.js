/*! its-angular-top-nav#2.4.0 - 2016-09-28 */
"use strict";var itsTopNav={};angular.module("its-top-nav",["its-top-nav.template"]),angular.module("its-top-nav.template",[]).run(["$templateCache",function($templateCache){$templateCache.put("its-angular-top-nav.html",'<div class="its-top-nav clear tb-default-theme"><div id=logo><a href={{config.itcHomeUrl}} ng-if=config.title.logoText><span ng-if=config.title.logoIconClassName class="icon {{config.title.logoIconClassName}}"></span> <span>{{config.title.logoText}}</span></a> <a href={{config.itcHomeUrl}} ng-if=!config.title.logoText class=default-logo>iTunes Connect</a></div><div class=site-nav ng-show=config.title><ul id=site-nav class=navmenu><li class="dropdown-menu hasPopOver" ng-class=config.title.className><h2 data-ng-if=data.modules.length href={{config.title.url}} id=main-nav-link class="menuopener ignore-line-breaks" its-popover-click><span>{{config.title.text}}</span> <span class=chevron></span></h2><h2 data-ng-if=!data.modules.length href={{config.title.url}} class=link-color>{{config.title.text}}</h2><div data-role=popover class="rightPopDown popupwrapper" id=main-nav><ul><li ng-repeat="module in data.modules" role=menuitem ng-class="{current: config.title.className === module.section}"><a href="{{ module.linkUrl }}"><div class=ticketcountwrapper ng-if="module.ticketCount !== undefined && module.ticketCount > 0"><div class=ticketcount>{{module.ticketCount}}</div></div><img ng-src="{{module.iconUrl}}"> <span ng-bind-html="module.name | decodeEntities"></span></a></li></ul></div></li></ul></div><app-switcher app-list=config.appSwitcherData.apps application=config.appSwitcherData.application base-icon="{{ config.appSwitcherData.baseIcon }}" on-app-select=config.appSwitcherData.onAppSelect(app) type-label="{{ config.appSwitcherData.applicationLabel }}" search-label="{{ config.appSwitcherData.searchLabel }}" no-results-label="{{ config.appSwitcherData.noResultsLabel }}" ng-show="config.appSwitcherData.apps.length > 0" show-list-link="{{ config.appSwitcherData.showListLink }}" go-to-list=config.appSwitcherData.goToList ng-if="config.appSwitcherData !== undefined"></app-switcher><div class=session><div data-ng-if=data.user class=session-wrapper><ul id=session-menu class=navmenu><li ng-if=data.user.associatedAccounts class="dropdown-menu hasPopOver"><a href="" id=session-nav-info its-popover-click><span class=chevron></span><div ng-if=config.userDetail.fullName class=session-menu-username>{{ config.userDetail.fullName }}</div><div ng-if=!config.userDetail.fullName class=session-menu-username>{{ data.user.displayName }}</div><div class=session-menu-providername>{{ data.user.contentProvider }}</div></a><div data-role=popover class="rightPopDown checkmarkable popupwrapper" id=session-nav-multi><ul><li role=menuitem class=session-nav-username><div class=session-nav-header><div class=session-nav-multiline>{{ data.user.userName }}</div><a href={{config.userDetail.url}}/{{data.user.sessionToken.dsId}} class=session-nav-multiline>{{config.userDetail.text}}</a></div></li></ul><div class="popupmenuinner bottomline" ng-if="data.user.associatedAccounts.length > 1"><ul><li ng-repeat="account in data.user.associatedAccounts"><a href="" class=providerlink ng-click=setNewProvider(account.contentProvider.contentProviderId) ng-class="{\'current\':account.contentProvider.contentProviderId === data.user.sessionToken.contentProviderId}">{{ account.contentProvider.name }}</a></li></ul></div><ul><li role=menuitem class=session-nav-link><a href={{config.signOut.url}} target=_self id=signoutlink>{{config.signOut.text}}</a></li></ul></div></li><li ng-if=data.user.availableProviders class="dropdown-menu hasPopOver"><a href="" id=session-nav-info its-popover-click><span class=chevron></span><div class=session-menu-username>{{ data.user.user.fullName }}</div><div class=session-menu-providername>{{ data.user.provider.name }}</div></a><div data-role=popover class="rightPopDown checkmarkable popupwrapper" id=session-nav-multi><ul><li role=menuitem class=session-nav-username><div class=session-nav-header><div class=session-nav-multiline>{{ data.user.user.emailAddress }}</div><a href={{config.userDetail.url}}/{{data.user.user.prsId}} target=_self class=session-nav-multiline>{{config.userDetail.text}}</a></div></li></ul><div class="popupmenuinner bottomline" ng-if="data.user.availableProviders.length > 1"><ul><li ng-repeat="account in data.user.availableProviders"><a href="" class=providerlink ng-click=setNewProvider(account.providerId) ng-class="{\'current\':account.providerId === data.user.provider.providerId}">{{ account.name }}</a></li></ul></div><ul><li role=menuitem class=session-nav-link><a href={{config.signOut.url}} target=_self id=signoutlink>{{config.signOut.text}}</a></li></ul></div></li></ul></div><div data-ng-if=!data.user class="session-wrapper top-xsm"><a href={{config.signOut.url}}>{{config.signOut.text}}</a></div><div data-ng-if=!config.hideHelp id=resources-help class="dropdown-menu hasPopOver"><a href={{data.resources[0].url}} class=icon-help its-popover-click></a><ul data-role=popover role=menu id=help-menu><li ng-repeat="resource in data.resources"><a href={{resource.url}}>{{ resource.localizedText }}</a></li></ul></div></div></div>')}]),itsTopNav.defaultConfig={itcBaseUrl:"https://itunesconnect.apple.com",itcHomeUrl:"https://itunesconnect.apple.com/ra/ng",apis:{user:{url:"https://itunesconnect.apple.com/WebObjects/iTunesConnect.woa/ra/user/detail"},header:{url:"https://itunesconnect.apple.com/WebObjects/iTunesConnect.woa/ra/nav/header/modules"},help:{url:"https://itunesconnect.apple.com/WebObjects/iTunesConnect.woa/ra/nav/help/links"},session:{url:"https://itunesconnect.apple.com/WebObjects/iTunesConnect.woa/ra/v1/session/webSession"}},title:{logoText:"",logoIconClassName:"",text:"",url:"https://itunesconnect.apple.com",className:""},userDetail:{fullName:"Johnny Appleseed",text:"User Detail",url:"https://itunesconnect.apple.com/WebObjects/iTunesConnect.woa/ra/ng/users_roles"},signOut:{text:"Sign Out",url:"https://itunesconnect.apple.com/WebObjects/iTunesConnect.woa/wa/logout"},resourceLinks:[{linkKey:"All",localizedText:"All Resources and Help",url:"http://itunespartner-stage.apple.com/"},{linkKey:"News",localizedText:"News",url:"http://itunespartner-stage.apple.com/news/"},{linkKey:"Guides",localizedText:"Guides",url:"http://itunespartner-stage.apple.com/guides/"},{linkKey:"Videos",localizedText:"Videos",url:"http://itunespartner-stage.apple.com/videos/"},{linkKey:"FAQ",localizedText:"FAQ",url:"http://itunespartner-stage.apple.com/faq/"},{linkKey:"ContactUs",localizedText:"Contact Us",url:"http://www.apple.com/itunes/go/itunesconnect/contactus"}]},angular.module("its-top-nav").constant("its-top-nav.defaultConfig",itsTopNav.defaultConfig),itsTopNav.ApiService=function($q,$http,defaultConfig){this.$q=$q,this.$http=$http,this.defaultConfig=defaultConfig},itsTopNav.ApiService.prototype.getLoggedInUserData=function(userApiConfig){var config,doTransformResponse=function(response){try{JSON.parse(response)}catch(e){return response}var transformedResponse=JSON.parse(response);return void 0!==transformedResponse.data.associatedAccounts&&transformedResponse.data.associatedAccounts.length>1&&(transformedResponse.data.associatedAccounts=transformedResponse.data.associatedAccounts.sort(function(a,b){return a.contentProvider.name.toLowerCase()<b.contentProvider.name.toLowerCase()?-1:a.contentProvider.name.toLowerCase()>b.contentProvider.name.toLowerCase()?1:0}),angular.forEach(transformedResponse.data.associatedAccounts,function(acct,key){acct.contentProvider.contentProviderId===transformedResponse.data.sessionToken.contentProviderId&&transformedResponse.data.associatedAccounts.splice(0,0,transformedResponse.data.associatedAccounts.splice(key,1)[0])})),transformedResponse.data},deferred=this.$q.defer();return userApiConfig.response?deferred.resolve(doTransformResponse(userApiConfig.response)):(config={method:"GET",url:userApiConfig.url,withCredentials:!0,transformResponse:doTransformResponse},deferred.resolve(this.$http(config))),deferred.promise},itsTopNav.ApiService.prototype.getModuleData=function(headerApiConfig){var config,self=this,doTransformResponse=function(response){try{JSON.parse(response)}catch(e){return response}var transformedResponse=JSON.parse(response),isQualifiedUrl=function(value){var pattern=/^(http|https)/;return!!pattern.test(value)};return transformedResponse.data&&transformedResponse.data.length>0&&transformedResponse.data.forEach(function(module,index){isQualifiedUrl(transformedResponse.data[index].iconUrl)===!1&&(transformedResponse.data[index].iconUrl=self.defaultConfig.itcBaseUrl+transformedResponse.data[index].iconUrl),isQualifiedUrl(transformedResponse.data[index].linkUrl)===!1&&(transformedResponse.data[index].linkUrl=self.defaultConfig.itcBaseUrl+transformedResponse.data[index].linkUrl)}),transformedResponse},deferred=this.$q.defer();return headerApiConfig.response?deferred.resolve(doTransformResponse(headerApiConfig.response)):(config={method:"GET",url:headerApiConfig.url,withCredentials:!0,transformResponse:doTransformResponse},deferred.resolve(this.$http(config))),deferred.promise},itsTopNav.ApiService.prototype.getHelp=function(helpApiConfig){var config,deferred=this.$q.defer();return helpApiConfig.response?deferred.resolve(helpApiConfig.response):(config={method:"GET",url:helpApiConfig.url,withCredentials:!0},deferred.resolve(this.$http(config))),deferred.promise},itsTopNav.ApiService.prototype.changeProvider=function(apiUrl,sessionToken){var config={method:"POST",url:apiUrl,data:sessionToken,withCredentials:!0};return this.$http(config)},angular.module("its-top-nav").service("its-top-nav.service",["$q","$http","its-top-nav.defaultConfig",itsTopNav.ApiService]),angular.module("its-top-nav").filter("decodeEntities",["$sce",function($sce){return function(html){return $sce.trustAsHtml(html)}}]),itsTopNav.Controller=function($scope,defaultConfig,ApiService){$scope.instance=this,this.directiveScope=$scope,this.defaultConfig=defaultConfig,this.ApiService=ApiService,this.getData.call(this)},itsTopNav.Controller.prototype.setNewProvider=function(token){return this.ApiService.changeProvider(this.config.apis.session.url,token)},itsTopNav.Controller.prototype.getData=function(){var self=this,incomingConf=self.directiveScope.config?angular.copy(self.directiveScope.config):{};self.directiveScope.config=angular.merge(self.defaultConfig,self.directiveScope.config&&incomingConf?incomingConf:{}),self.directiveScope.data={},this.config=angular.copy(self.directiveScope.config),this.ApiService.getLoggedInUserData(this.config.apis.user).then(function(success){self.directiveScope.data.user=success.data},function(error){0===error.status&&""!==self.config.userDetailApiNonItcUrl&&self.ApiService.getLoggedInUserData(self.config.userDetailApiNonItcUrl).then(function(success){success.data&&success.data.data&&(self.directiveScope.data.user=success.data.data,self.directiveScope.data.user.userName=success.data.data.emailAddress)})}),this.ApiService.getModuleData(this.config.apis.header).then(function(success){self.directiveScope.data.modules=success.data&&success.data.data?success.data.data:[]}),this.ApiService.getHelp(this.config.apis.help).then(function(success){self.directiveScope.data.resources=success.data.data},function(error){self.directiveScope.data.resources=self.config.resourceLinks})},itsTopNav.Link=function($scope,$element,$attr,$controller){var domElement=$element[0];$scope.setNewProvider=function(providerId){if($controller.config.apis.session.url){if(providerId!==$scope.data.user.sessionToken.contentProviderId){var tokenCopy=(angular.copy($scope.data.user.sessionToken),angular.copy($scope.data.user.sessionToken));tokenCopy.contentProviderId=providerId,$controller.setNewProvider(tokenCopy).then(function(data){"SUCCESS"===data.data.statusCode.toUpperCase()&&window.location.reload()})}}else $controller.config.apis.session.override(providerId)},document.addEventListener("click",function($event){angular.forEach(domElement.querySelectorAll("[data-role=popover]"),function(popover){popover.classList.contains("open")&&popover.classList.remove("open")})})},angular.module("its-top-nav").directive("itsTopNav",function(){return{restrict:"EA",templateUrl:"its-angular-top-nav.html",scope:{config:"=?",instance:"=?itsTopNav"},controller:["$scope","its-top-nav.defaultConfig","its-top-nav.service",itsTopNav.Controller],link:itsTopNav.Link}}),angular.module("its-top-nav").directive("itsPopoverClick",["$document",function($document){return{restrict:"A",link:function($scope,$element){$element.on("click",function($event){$event.preventDefault(),$event.stopPropagation();var clickedPopover=this.parentElement.querySelector("[data-role=popover]"),isOpen=clickedPopover.classList.contains("open");document.querySelector(".its-top-nav").click(),isOpen?clickedPopover.classList.remove("open"):clickedPopover.classList.add("open")})}}}]);